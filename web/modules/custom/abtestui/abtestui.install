<?php

/**
 * @file
 * Install file for the module.
 */

/**
 * Implements hook_install().
 */
function abtestui_install() {
  Drupal::service('abtestui.abjs_experience_storage')->createOrLoadControl();
}

/**
 * Implements hook_uninstall().
 */
function abtestui_uninstall() {
  Drupal::state()->delete('abtestui');
}

/**
 * Implements hook_schema().
 */
function abtestui_schema() {
  $schema = [];

  $schema['abtestui_test'] = [
    'description' => 'The base table for a/b tests.',
    'fields' => [
      // ID of this test is the same as the ABJS test ID.
      'tid' => [
        'description' => 'The primary identifier for a test.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'base_url' => [
        'description' => 'The base URL for the test.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'normal',
      ],
      'analytics_url' => [
        'description' => 'The URL of the analytics report.',
        'type' => 'text',
        'default' => NULL,
        'size' => 'normal',
      ],
      // ID of test/condition that binds with the required condition,
      // meaning the 'if url == baseurl'.
      'abjs_tcid' => [
        'description' => 'The test/condition relation ID.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      // ID of the test/experience  that binds with the 'Control' experience.
      // Required for the 'fractions' column.
      'abjs_teid' => [
        'description' => 'The test/experience relation ID.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
    ],
    // For documentation purposes only; foreign keys are not created in the
    // database nor are they enforced in drupal.
    'foreign keys' => [
      'test' => [
        'table' => 'abjs_test',
        'columns' => [
          'tid' => 'tid',
        ],
      ],
      'test_condition' => [
        'table' => 'abjs_test_condition',
        'columns' => [
          'abjs_tcid' => 'tcid',
        ],
      ],
    ],
    'primary key' => [
      'tid',
    ],
    'indexes' => [
      'abtestui_tid' => ['tid'],
      'abjs_tcid' => ['abjs_tcid'],
    ],
  ];

  $schema['abtestui_variation'] = [
    'descriptions' => 'The variations for the a/b tests.',
    'fields' => [
      'vid' => [
        'description' => 'The primary identifier for a variation.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'tid' => [
        'description' => 'The test ID.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'url' => [
        'description' => 'The variation URL.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'normal',
      ],
      'abjs_teid' => [
        'description' => 'A test/experience relation ID.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
    ],
    // For documentation purposes only; foreign keys are not created in the
    // database nor are they enforced in drupal.
    'foreign keys' => [
      'test' => [
        'table' => 'abtestui_test',
        'columns' => [
          'tid' => 'tid',
        ],
      ],
      'test_experience' => [
        'table' => 'abjs_test_experience',
        'columns' => [
          'abjs_teid' => 'teid',
        ],
      ],
    ],
    'primary key' => [
      'vid',
    ],
    'indexes' => [
      'abtestui_vid' => ['vid'],
      'abtestui_tid' => ['tid'],
      'abjs_teid' => ['abjs_teid'],
    ],
  ];

  return $schema;
}

/**
 * Enable the abtestui_google_analytics module.
 */
function abtestui_update_8001() {
  $moduleExists = Drupal::moduleHandler()->moduleExists('abtestui_google_analytics');
  if ($moduleExists) {
    return;
  }

  /** @var \Drupal\Core\Extension\ModuleInstallerInterface $installer */
  $installer = Drupal::service('module_installer');
  $installer->install(['abtestui_google_analytics']);
}
